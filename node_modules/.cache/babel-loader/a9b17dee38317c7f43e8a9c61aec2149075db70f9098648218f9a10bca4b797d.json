{"ast":null,"code":"// import { createStore } from \"redux\"\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nexport const INCREMENT = \"increment\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthented: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.initialAuthState = true;\n    },\n    logout(state) {\n      state.initialAuthState = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n\n//     // mitte kunagi ei tohi state'i ise muuta!!!!\n//     // if (action.type === \"increment\") {\n//     //    state.counter++\n\n//     //    return state\n//     // }\n\n//     if (action.type === INCREMENT) {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"toggle\") {\n//         return {\n//             counter: state.counter, \n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n// const store = createStore(counterSlice.reducer)\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","INCREMENT","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthented","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/atla/Desktop/GitHub/redux/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\"\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"\n\nexport const INCREMENT = \"increment\"\n\nconst initialCounterState = {counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({\n    name: \"counter\",\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++\n        },\n        decrement(state) {\n            state.counter--\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload\n        },\n        toggle(state) {\n            state.showCounter = !state.showCounter\n        },\n    }\n})\n\nconst initialAuthState = { isAuthented: false }\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.initialAuthState = true\n        },\n        logout(state) {\n            state.initialAuthState = false\n        }\n    }\n})\n\n// const counterReducer = (state = initialState, action) => {\n\n//     // mitte kunagi ei tohi state'i ise muuta!!!!\n//     // if (action.type === \"increment\") {\n//     //    state.counter++\n\n//     //    return state\n//     // }\n\n\n//     if (action.type === INCREMENT) {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"toggle\") {\n//         return {\n//             counter: state.counter, \n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n// const store = createStore(counterSlice.reducer)\n\n\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\n})\n\nexport const counterActions = counterSlice.actions\nexport const authActions = authSlice.actions\n\nexport default store"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE3D,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EAAEC,WAAW,EAAE;AAAM,CAAC;AAE/C,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACNW,KAAKA,CAACT,KAAK,EAAE;MACTA,KAAK,CAACM,gBAAgB,GAAG,IAAI;IACjC,CAAC;IACDI,MAAMA,CAACV,KAAK,EAAE;MACVA,KAAK,CAACM,gBAAgB,GAAG,KAAK;IAClC;EACJ;AACJ,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,MAAMK,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAE;IAAEnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAQ;AACtE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}