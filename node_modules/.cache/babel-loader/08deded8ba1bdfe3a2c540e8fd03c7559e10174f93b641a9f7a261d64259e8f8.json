{"ast":null,"code":"var _jsxFileName = \"/Users/atla/Desktop/GitHub/redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\n// import { Component } from 'react';\nimport classes from './Counter.module.css';\n// import { connect } from 'react-redux';\n// import { INCREMENT } from '../store';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { counterActions } from '../store/counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const counter = useSelector(state => state.counter.counter);\n  const dispatch = useDispatch();\n  const show = useSelector(state => state.counter.showCounter);\n  const incrementHandler = () => {\n    // dispatch({ type: INCREMENT})\n    dispatch(counterActions.increment());\n  };\n  const increaseHandler = () => {\n    // dispatch({ type: \"increase\", amount: 5 })\n    dispatch(counterActions.increase(5)); // { type: some-unique-identifier, payload: 10}\n  };\n  const decrementHandler = () => {\n    // dispatch({ type: \"decrement\"})\n    dispatch(counterActions.decrement());\n  };\n  const toggleCounterHandler = () => {\n    // dispatch({ type: \"toggle\"})\n    dispatch(counterActions.toggleCounter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"bmG+sMgiykIBTWx37luxqLSPX1w=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = Counter;\nexport default Counter;\n\n//Class-based --->\n\n// class Counter extends Component{\n\n//   incrementHandler() {\n//     this.props.increment()\n//   }\n//   decrementHandler() {\n//     this.props.decrement()\n//   }\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   };\n//   }\n\n//   const mapStateProps = state => {\n//     return {\n//       counter: state.counter\n//     }\n//   }\n\n//   const mapDispatchToProps = dispatch => {\n//     return {\n//       increment: () => dispatch({ type: \"increment\" }),\n//       decrement: () => dispatch({ type: \"decrement\" })\n//     }\n//   }\n\n// export default connect(mapStateProps, mapDispatchToProps)(Counter)\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","counterActions","jsxDEV","_jsxDEV","Counter","_s","counter","state","dispatch","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/atla/Desktop/GitHub/redux/src/components/Counter.js"],"sourcesContent":["// import { Component } from 'react';\nimport classes from './Counter.module.css';\n// import { connect } from 'react-redux';\n// import { INCREMENT } from '../store';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { counterActions } from '../store/counter';\n\nconst Counter = () => {\n\n  const counter = useSelector((state) => state.counter.counter)\n  const dispatch = useDispatch()\n  const show = useSelector((state) => state.counter.showCounter)\n\n  const incrementHandler = () => {\n    // dispatch({ type: INCREMENT})\n    dispatch(counterActions.increment())\n  }\n\n  const increaseHandler = () => {\n    // dispatch({ type: \"increase\", amount: 5 })\n    dispatch(counterActions.increase(5)) // { type: some-unique-identifier, payload: 10}\n  }\n\n  const decrementHandler = () => {\n    // dispatch({ type: \"decrement\"})\n    dispatch(counterActions.decrement())\n  }\n\n  const toggleCounterHandler = () => {\n    // dispatch({ type: \"toggle\"})\n    dispatch(counterActions.toggleCounter())\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n     {show &&  <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n//Class-based --->\n\n// class Counter extends Component{\n\n//   incrementHandler() {\n//     this.props.increment()\n//   }\n//   decrementHandler() {\n//     this.props.decrement()\n//   }\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   };\n//   }\n\n//   const mapStateProps = state => {\n//     return {\n//       counter: state.counter\n//     }\n//   }\n\n//   const mapDispatchToProps = dispatch => {\n//     return {\n//       increment: () => dispatch({ type: \"increment\" }),\n//       decrement: () => dispatch({ type: \"decrement\" })\n//     }\n//   }\n\n// export default connect(mapStateProps, mapDispatchToProps)(Counter)\n"],"mappings":";;AAAA;AACA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C;AACA;;AAEA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,OAAO,CAACA,OAAO,CAAC;EAC7D,MAAME,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGV,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,OAAO,CAACI,WAAW,CAAC;EAE9D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAH,QAAQ,CAACP,cAAc,CAACW,SAAS,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAL,QAAQ,CAACP,cAAc,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC;EACvC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAP,QAAQ,CAACP,cAAc,CAACe,SAAS,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACAT,QAAQ,CAACP,cAAc,CAACiB,aAAa,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEf,OAAA;IAAMgB,SAAS,EAAErB,OAAO,CAACQ,OAAQ;IAAAc,QAAA,gBAC/BjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBf,IAAI,iBAAKN,OAAA;MAAKgB,SAAS,EAAErB,OAAO,CAAC2B,KAAM;MAAAL,QAAA,EAAEd;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvDrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAQuB,OAAO,EAAEf,gBAAiB;QAAAS,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDrB,OAAA;QAAQuB,OAAO,EAAEb,eAAgB;QAAAO,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDrB,OAAA;QAAQuB,OAAO,EAAEX,gBAAiB;QAAAK,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNrB,OAAA;MAAQuB,OAAO,EAAET,oBAAqB;MAAAG,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACnB,EAAA,CAtCID,OAAO;EAAA,QAEKL,WAAW,EACVC,WAAW,EACfD,WAAW;AAAA;AAAA4B,EAAA,GAJpBvB,OAAO;AAwCb,eAAeA,OAAO;;AAEtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}