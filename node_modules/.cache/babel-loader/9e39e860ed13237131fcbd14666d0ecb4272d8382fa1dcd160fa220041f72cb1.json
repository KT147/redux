{"ast":null,"code":"// import { createStore } from \"redux\"\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nexport const INCREMENT = \"increment\";\nconst initialAuthState = {\n  isAuthented: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthented = true;\n    },\n    logout(state) {\n      state.isAuthented = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n\n//     // mitte kunagi ei tohi state'i ise muuta!!!!\n//     // if (action.type === \"increment\") {\n//     //    state.counter++\n\n//     //    return state\n//     // }\n\n//     if (action.type === INCREMENT) {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"toggle\") {\n//         return {\n//             counter: state.counter, \n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n// const store = createStore(counterSlice.reducer)\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","INCREMENT","initialAuthState","isAuthented","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["/Users/atla/Desktop/GitHub/redux/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\"\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"\n\nexport const INCREMENT = \"increment\"\n\n\nconst initialAuthState = { isAuthented: false }\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthented = true\n        },\n        logout(state) {\n            state.isAuthented = false\n        }\n    }\n})\n\n// const counterReducer = (state = initialState, action) => {\n\n//     // mitte kunagi ei tohi state'i ise muuta!!!!\n//     // if (action.type === \"increment\") {\n//     //    state.counter++\n\n//     //    return state\n//     // }\n\n\n//     if (action.type === INCREMENT) {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === \"toggle\") {\n//         return {\n//             counter: state.counter, \n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n// const store = createStore(counterSlice.reducer)\n\n\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\n})\n\nexport const counterActions = counterSlice.actions\nexport const authActions = authSlice.actions\n\nexport default store"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,OAAO,MAAMC,SAAS,GAAG,WAAW;AAGpC,MAAMC,gBAAgB,GAAG;EAAEC,WAAW,EAAE;AAAM,CAAC;AAE/C,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAE;MACTA,KAAK,CAACN,WAAW,GAAG,IAAI;IAC5B,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,WAAW,GAAG,KAAK;IAC7B;EACJ;AACJ,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,MAAMQ,KAAK,GAAGX,cAAc,CAAC;EACzBY,OAAO,EAAE;IAAEC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEX,SAAS,CAACQ;EAAQ;AACtE,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;AAE5C,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}